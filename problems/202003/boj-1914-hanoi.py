
def hanoi(n, a, b, c):
    # n == 1이면 a에서 c로 가는 마지막 판(완료)
    if n == 1:
        print(a, c)
    else:
        # a에서 b로 옮기기
        hanoi(n-1, a, c, b)
        # a에 있는거 c로 옮기기
        print(a, c)
        # b에 있는거 c로 옮기기
        hanoi(n-1, b, a, c)


cur, i = 0, 0
N = int(input())

# 횟수 늘어나는 규칙 3(1,1,1) => 7(3,1,3) => 15(7,1,7) => 31(15,1,15)
while i < N:
    cur = 2*cur + 1
    i += 1
print(cur)

if N <= 20:
    hanoi(N, 1, 2, 3)

#! 접근1) 하노이탑 공식
"""
n-1개를 a에서 b로 옮긴다 => 남은 맨 밑 한개를 a에서 c로 옮긴다 => n-1개를 b에서 c로 옮긴다
hanoi(n,a,b,c)의 의미 : n개의 블록이 a에 쌓여있는 걸 c로 옮길 것이고, 남은 한 기둥이 b
"""
#! 접근2) 규칙 찾기
# * 횟수 늘어나는 규칙이 a에서 c로 가장큰판을 옮기는 거 기준으로 그 전과 그 후가 같다
# 횟수 늘어나는 규칙 3(1,1,1) => 7(3,1,3) => 15(7,1,7) => 31(15,1,15)

#! 접근3) 문제의 일부
# * 재귀를 써야겠다 : 작은 문제의 유형이 큰 문제에서도 계속해서 반복

#! 못푼 이유1)
# * 하노이탑의 동작방식이 a에서 b로 n-1개 => a에서 c로 제일 큰 판 => b에서 c로 n-1개 라는 사실을 몰라따
