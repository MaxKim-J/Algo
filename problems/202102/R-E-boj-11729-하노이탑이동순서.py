# 이동 규칙 : n개의 원판이 있을 때 맨 밑의 원판을 제외하고 나머지 n-1개의 원판을
# 2번으로 옮기고, 맨 밑 원판을 3으로 옮김 => 그리고 나서 2에 있는 원판들을 다시 3으로 옮김(반복)

# 1번 기둥에서 3번 기둥으로 옮기는데 2를 보조로 사용


def hanoi(n, a, b, c):
    # 원반 개수가 하나 남았다면 a에 있는 거를 c로 옮기면 된다 => 그리고 함수 종료
    if n == 1:
        print(a, c)
    # 두개 이상 남았다면 가장 큰거 제외 다 보조기둥으로 => 중위순회
    else:
        # a -> b, 가장 큰것을 제외하고 모두 보조기둥으로 옮김(이때 재귀를 돌고 n을 하나씩 줄이면서 a->b 함)
        hanoi(n-1, a, c, b)
        # a -> c, 맨 아래 원반을 목적지로 이동시킴
        print(a, c)
        # b -> c,
        hanoi(n-1, b, a, c)


cur, i = 0, 0
N = int(input())

# 최소 횟수를 계산함. 하노이탑 재귀의 결과물은 이진트리로 생산이 되므로..
# 1 -> 3 -> 7 -> 15 이렇게 나옴 2n+1수열이랄까...
while i < N:
    cur = 2*cur + 1
    i += 1

print(cur)

if N <= 20:
    hanoi(N, 1, 2, 3)
